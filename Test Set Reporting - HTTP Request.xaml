<Activity mc:Ignorable="sap sap2010" x:Class="Test_Set_Reporting" this:Test_Set_Reporting.in_ProjectPrefix="VEEVA" this:Test_Set_Reporting.in_TestSetName="TS_Deviation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiascb="clr-namespace:UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestcaselogsId.Bundle;assembly=C99BBEE2CE2_ApiV2Tes.WMwcg4QnOeL1yvOup2MqEHl2" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ProjectPrefix" Type="InArgument(x:String)" />
    <x:Property Name="in_TestSetName" Type="InArgument(x:String)" />
    <x:Property Name="in_TestExecutionName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1391.6,18789.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Test_Set_Reporting_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="86">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Accesa.ImageResizer.Activities</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models.FilterBuilder</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Helpers.TypeDetailsCustomization</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Activities</x:String>
      <x:String>UiPath.Platform.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2Testsets.Bundle</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2Testsets.Bundle</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestexecutionsWithstats.Bundle</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestexecutionsWithstats.Bundle</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestcaselogsTestexecutionTestExecutionIdPaged.Bundle</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestcaselogsTestexecutionTestExecutionIdPaged.Bundle</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestcaselogsId.Bundle</x:String>
      <x:String>UiPath.IntegrationService.Activities.SWEntities.C99BBEE2CE2_ApiV2TestcaselogsId.Bundle</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="106">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>Accesa.ImageResizer.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>C99BBEE2CE2_v2_proje.nkMkX3xvnHH1Gr3tk36evol3</AssemblyReference>
      <AssemblyReference>C99BBEE2CE2_ApiV2Tes.SzyDK4B1URE15PLJ338Ht2Z2</AssemblyReference>
      <AssemblyReference>C99BBEE2CE2_ApiV2Tes.sEhZM3X3GhF1qKD6G4s2EQ1</AssemblyReference>
      <AssemblyReference>C99BBEE2CE2_ApiV2Tes.9PzGs1lgX6N1a3af7PnoHh3</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>C99BBEE2CE2_ApiV2Tes.WMwcg4QnOeL1yvOup2MqEHl2</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="CONFIGURATION&#xA;&gt; in_ProjectPrefix - provide the Project Prefix in Test Manager&#xA;&gt; in_TestSetName - provide the Test Set name in Test Manager&#xA;&gt; in_TestExecutionName (optional) - provide the name of a Test Execution. If not provided, the latest Finished test execution will be used&#xA;" DisplayName="Test_Set_Reporting" sap:VirtualizedContainerService.HintSize="1040,22259" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ProjectID" />
      <Variable x:TypeArguments="x:String" Name="TestSetID" />
      <Variable x:TypeArguments="x:String" Name="TestExecutionID" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="count" />
      <Variable x:TypeArguments="x:String" Name="TestCaseLogID" />
      <Variable x:TypeArguments="x:String" Name="TestExecutionName" />
      <Variable x:TypeArguments="x:String" Name="ReportingDate" />
      <Variable x:TypeArguments="x:String" Name="TestSetName" />
      <Variable x:TypeArguments="x:String" Name="TestExecutionStatus" />
      <Variable x:TypeArguments="x:String" Name="TestsPassed" />
      <Variable x:TypeArguments="x:String" Name="TestsFailed" />
      <Variable x:TypeArguments="x:String" Name="TestsNotExecuted" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="assertionCount" />
      <Variable x:TypeArguments="uiascb:ApiV2TestcaselogsId" Name="List_TestAssertion" />
      <Variable x:TypeArguments="x:String" Name="TestCaseAutomationName" />
      <Variable x:TypeArguments="x:String" Name="TestCaseEndDate" />
      <Variable x:TypeArguments="x:String" Name="TestCaseStatus" />
      <Variable x:TypeArguments="x:String" Name="TestCaseStartDate" />
      <Variable x:TypeArguments="x:String" Name="TestCaseRobotUser" />
      <Variable x:TypeArguments="x:String" Name="TestCaseRobotMachine" />
      <Variable x:TypeArguments="x:String" Name="TestCaseName" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="TestExecutionCounter" />
      <Variable x:TypeArguments="x:String" Name="ExternalApp_Scope" />
      <Variable x:TypeArguments="x:String" Name="BearerToken" />
      <Variable x:TypeArguments="x:String" Name="ExternalApp_ClientSecret" />
      <Variable x:TypeArguments="x:String" Name="ExternalApp_ClientID" />
      <Variable x:TypeArguments="x:String" Name="TM_siteName" />
      <Variable x:TypeArguments="x:String" Name="TM_baseURL" />
      <Variable x:TypeArguments="x:String" Name="TM_orginstance" />
      <Variable x:TypeArguments="x:String" Name="TM_tenantName" />
      <Variable x:TypeArguments="njl:JObject" Name="TestSetJson" />
      <Variable x:TypeArguments="njl:JObject" Name="TestExecutionJson" />
      <Variable x:TypeArguments="njl:JObject" Name="TestCaseLogJSON" />
      <Variable x:TypeArguments="njl:JObject" Name="AssertionJSON" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Assign API Authentication Variables" sap:VirtualizedContainerService.HintSize="727,335" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExternalApp_ClientID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">be518ece-8422-4a1d-ae9a-52ab40bb5b6b</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExternalApp_ClientSecret]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">M~nVSVh#tQt@K4qPxGfx8bF7#Roj6Mk8VV$I^QvwIyRe7DY!jnT9pjWS1a%GQO*n</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExternalApp_Scope]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">TM.TestExecutions TM.TestSets TM.TestCases TM.Projects.Read TM.CustomFieldValues.Read TM.CustomFieldDefinitions.Read</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TM_siteName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">https://staging.uipath.com</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TM_orginstance]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">uibank</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TM_tenantName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">DevelopmentTenant</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TM_baseURL]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TM_siteName+"/"+TM_orginstance+"/"+TM_tenantName+"/testmanager_/api"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HTTPRequest_GetAuthToken - Invoke Workflow File (Helper Workflows\WIP Improvements\HTTPRequest_GetAuthToken.xaml)" sap:VirtualizedContainerService.HintSize="727,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Helper Workflows\HTTP Request Workflows\HTTPRequest_GetAuthToken.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="API_endpoint_auth">[TM_siteName+"/identity_/connect/token"]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExternalApp_ClientID">[ExternalApp_ClientID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExternalApp_ClientSecret">[ExternalApp_ClientSecret]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExternalApp_Scope">[ExternalApp_Scope]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_TM_token">[BearerToken]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <TryCatch DisplayName="ERROR HANDLING - Ensure Project ID is provided" sap:VirtualizedContainerService.HintSize="727,1090" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="API EndPoint - {BaseURL}/v2/projects/prefix/{projectPrefix}&#xA;Input Parameters - Project Prefix (in_ProjectPrefix)&#xA;Output Parameters - Project ID (ProjectID)" DisplayName="Get Project ID" sap:VirtualizedContainerService.HintSize="452,288" sap2010:WorkflowViewState.IdRef="Sequence_114">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HTTPRequest_GetProjectID - Invoke Workflow File (Helper Workflows\WIP Improvements\HTTPRequest_GetProjectID.xaml)" sap:VirtualizedContainerService.HintSize="418,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Helper Workflows\HTTP Request Workflows\HTTPRequest_GetProjectID.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_TM_projectPrefix">[in_ProjectPrefix]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TM_baseURL">[TM_baseURL]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_ProjectID">[ProjectID]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TM_authtoken">[BearerToken]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="452,538" sap2010:WorkflowViewState.IdRef="Sequence_75">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[in_ProjectPrefix &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="418,478" sap2010:WorkflowViewState.IdRef="If_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,174" sap2010:WorkflowViewState.IdRef="Sequence_77">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="382,114" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Project Prefix does not exist in connected Test Manager instance. Please verify Integration Service connection." />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,174" sap2010:WorkflowViewState.IdRef="Sequence_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="382,114" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="No Project Prefix provided. Please update input parameter and re-execute" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="452,90" sap2010:WorkflowViewState.IdRef="Sequence_76">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <TryCatch DisplayName="ERROR HANDLING - Ensure Test Set Name is provided" sap:VirtualizedContainerService.HintSize="727,1106" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="API EndPoint - {BaseURL}/v2/{projectId}/testsets&#xA;Input Parameters - Project ID (ProjectID)&#xA;    &gt; Search by Test Set Name (in_TestSetName)&#xA;Output Parameters - List of Test Sets (List_TestSets)" DisplayName="Get List of Test Sets" sap:VirtualizedContainerService.HintSize="452,304" sap2010:WorkflowViewState.IdRef="Sequence_115">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HTTPRequest_GetListofTestSets - Invoke Workflow File (Helper Workflows\WIP Improvements\HTTPRequest_GetListofTestSets.xaml)" sap:VirtualizedContainerService.HintSize="418,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Helper Workflows\HTTP Request Workflows\HTTPRequest_GetListofTestSets.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_TM_projectID">[ProjectID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TM_baseURL">[TM_baseURL]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TM_authtoken">[BearerToken]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TestSetName">[in_TestSetName]</InArgument>
              <OutArgument x:TypeArguments="njl:JObject" x:Key="out_JSONout">[TestSetJson]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="452,538" sap2010:WorkflowViewState.IdRef="Sequence_80">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[in_TestSetName &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="418,478" sap2010:WorkflowViewState.IdRef="If_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,174" sap2010:WorkflowViewState.IdRef="Sequence_81">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="382,114" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="[&quot;Test Set Name does not exist in the Project &quot;+in_ProjectPrefix+&quot;. Please verify input parameter.&quot;]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,174" sap2010:WorkflowViewState.IdRef="Sequence_82">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="382,114" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" Reason="No Test Set Name provided. Please update input parameter and re-execute" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="452,90" sap2010:WorkflowViewState.IdRef="Sequence_79">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <ui:MultipleAssign DisplayName="Assign Test Set Info" sap:VirtualizedContainerService.HintSize="727,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestSetID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestSetJson("data")(0)("id").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestSetName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestSetJson("data")(0)("name").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <Sequence sap2010:Annotation.AnnotationText="API EndPoint - {BaseURL}/v2/{projectId}/testexecutions/withstats&#xA;Input Parameters - Project ID (ProjectID), Test Set ID (TestSetID)&#xA;    &gt; Search by Test Execution Name (in_TestExecutionName)&#xA;    &gt; Order by Created Date (&quot;created desc&quot;)&#xA;Output Parameters - List of Test Executions (List_TestExecution)" DisplayName="Get Test Execution ID" sap:VirtualizedContainerService.HintSize="727,352" sap2010:WorkflowViewState.IdRef="Sequence_112">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HTTPRequest_GetTestExecutionID - Invoke Workflow File (Helper Workflows\WIP Improvements\HTTPRequest_GetTestExecutionID.xaml)" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Helper Workflows\HTTP Request Workflows\HTTPRequest_GetTestExecutionID.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_TestExecutionName">[in_TestExecutionName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_projectID">[ProjectID]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_baseURL">[TM_baseURL]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_authtoken">[BearerToken]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TestSetID">[TestSetID]</InArgument>
          <OutArgument x:TypeArguments="njl:JObject" x:Key="out_JSONout">[TestExecutionJson]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="Find First Completed Test Execution" sap:VirtualizedContainerService.HintSize="727,1543" sap2010:WorkflowViewState.IdRef="Sequence_83">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="No_of_TestExecutions" />
        <Variable x:TypeArguments="x:Boolean" Name="TestExecutionExists" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Intialize Test Execution Counters" sap:VirtualizedContainerService.HintSize="506,211" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[No_of_TestExecutions]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[TestExecutionJson("data").Count]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[TestExecutionCounter]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Boolean">[TestExecutionExists]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[TestExecutionCounter &lt; No_of_TestExecutions]" DisplayName="Iterate through Returned Test Executions" sap:VirtualizedContainerService.HintSize="506,710" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
        <ui:InterruptibleDoWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="504,579" sap2010:WorkflowViewState.IdRef="Sequence_84">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[TestExecutionJson(&quot;data&quot;)(TestExecutionCounter)(&quot;status&quot;).ToString = &quot;Finished&quot;]" DisplayName="Check for Finished Test Execution" sap:VirtualizedContainerService.HintSize="470,519" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,223" sap2010:WorkflowViewState.IdRef="Sequence_88">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Test Execution exists!" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_18">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[TestExecutionExists]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Break DisplayName="Break - Exit While Loop" sap:VirtualizedContainerService.HintSize="434,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,166" sap2010:WorkflowViewState.IdRef="Sequence_87">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Increment Counter" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[TestExecutionCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[TestExecutionCounter+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ui:InterruptibleDoWhile.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleDoWhile>
      <If Condition="[TestExecutionExists]" DisplayName="Check if Valid test executions exists" sap:VirtualizedContainerService.HintSize="506,530" sap2010:WorkflowViewState.IdRef="If_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,226" sap2010:WorkflowViewState.IdRef="Sequence_86">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,166" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Test Execution identified successfully. Report creation initiated.&quot;]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,174" sap2010:WorkflowViewState.IdRef="Sequence_85">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="382,114" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5" Reason="[&quot;No completed test executions in Project &quot;+in_ProjectPrefix+&quot; associated with Test Set &quot;+in_TestSetName+&quot;. Please ensure a completed Test Execution exists and re-execute.&quot;]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:MultipleAssign DisplayName="Assign Test Execution Info" sap:VirtualizedContainerService.HintSize="727,335" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestExecutionID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestExecutionJson("data")(TestExecutionCounter)("id").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestExecutionName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestExecutionJson("data")(TestExecutionCounter)("name").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ReportingDate]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[DateTime.Parse(TestExecutionJson("data")(TestExecutionCounter)("reportingDate").ToString()).ToString("MM/dd/yyyy")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestExecutionStatus]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestExecutionJson("data")(TestExecutionCounter)("status").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestsPassed]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestExecutionJson("data")(TestExecutionCounter)("passed").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestsFailed]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestExecutionJson("data")(TestExecutionCounter)("failed").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[TestsNotExecuted]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[TestExecutionJson("data")(TestExecutionCounter)("none").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <p:WordApplicationScope SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Open Test Report Template" FilePath="Test Report Templates\Template - Test Reporting.docx" sap:VirtualizedContainerService.HintSize="727,403" sap2010:WorkflowViewState.IdRef="WordApplicationScope_4" SensitivityOperation="None">
      <p:WordApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WordDocument">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,272" sap2010:WorkflowViewState.IdRef="Sequence_60">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:WordSaveAs DisplayName="Save Document As New Output File" FilePath="Test Report Templates\Temp Output (Word).docx" sap:VirtualizedContainerService.HintSize="382,212" sap2010:WorkflowViewState.IdRef="WordSaveAs_2" />
          </Sequence>
        </ActivityAction>
      </p:WordApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:WordApplicationScope>
    <Sequence sap2010:Annotation.AnnotationText="API EndPoint - {BaseURL}/v2/{projectId}/testcaselogs/testexecution/{testExecutionId}/paged&#xA;Input Parameters - Project ID (ProjectID), Test Execution ID (TestExecutionID)&#xA;Output Parameters - List of Test Case Logs (List_TestCaseLog)" DisplayName="Get Test Case Log ID" sap:VirtualizedContainerService.HintSize="727,336" sap2010:WorkflowViewState.IdRef="Sequence_113">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HTTPRequest_GetTestCaseLogID - Invoke Workflow File (Helper Workflows\WIP Improvements\HTTPRequest_GetTestCaseLogID.xaml)" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Helper Workflows\HTTP Request Workflows\HTTPRequest_GetTestCaseLogID.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_TestExecutionID">[TestExecutionID]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_projectID">[ProjectID]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_baseURL">[TM_baseURL]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_authtoken">[BearerToken]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TestSetID">[TestSetID]</InArgument>
          <OutArgument x:TypeArguments="njl:JObject" x:Key="out_JSONout">[TestCaseLogJSON]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TM_testExecutionID">[TestExecutionID]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <p:WordApplicationScope SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Edit Test Report Template" FilePath="Test Report Templates\Temp Output (Word).docx" sap:VirtualizedContainerService.HintSize="727,16307" sap2010:WorkflowViewState.IdRef="WordApplicationScope_3" SensitivityOperation="None">
      <p:WordApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WordDocument">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="725,16185" sap2010:WorkflowViewState.IdRef="Sequence_56">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:WordSetBookmarkContent BookmarkName="Test_Execution_Name" BookmarkText="[TestExecutionName]" DisplayName="Set Bookmark - Test Set Run Name" sap:VirtualizedContainerService.HintSize="691,175" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSetBookmarkContent>
            <p:WordSetBookmarkContent BookmarkName="Test_Set_Name" BookmarkText="[TestSetName]" DisplayName="Set Bookmark - Test Execution Name" sap:VirtualizedContainerService.HintSize="691,175" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSetBookmarkContent>
            <p:WordSetBookmarkContent BookmarkName="Created_On" BookmarkText="[ReportingDate]" DisplayName="Set Bookmark - Test Set Name" sap:VirtualizedContainerService.HintSize="691,175" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSetBookmarkContent>
            <If Condition="[TestExecutionStatus = &quot;Passed&quot;]" DisplayName="Set Test Execution Status" sap:VirtualizedContainerService.HintSize="691,591" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,226" sap2010:WorkflowViewState.IdRef="Sequence_57">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:WordSetBookmarkContent BookmarkName="TestExecution_Failed" DisplayName="Set Bookmark - Test Execution - Failed" sap:VirtualizedContainerService.HintSize="382,166" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_4">
                    <p:WordSetBookmarkContent.BookmarkText>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </p:WordSetBookmarkContent.BookmarkText>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p:WordSetBookmarkContent>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,226" sap2010:WorkflowViewState.IdRef="Sequence_58">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:WordSetBookmarkContent BookmarkName="TestExecution_Passed" DisplayName="Set Bookmark - Test Execution - Passed" sap:VirtualizedContainerService.HintSize="382,166" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_5">
                    <p:WordSetBookmarkContent.BookmarkText>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </p:WordSetBookmarkContent.BookmarkText>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p:WordSetBookmarkContent>
                </Sequence>
              </If.Else>
            </If>
            <p:WordSetBookmarkContent BookmarkName="Tests_Passed" BookmarkText="[TestsPassed]" DisplayName="Set Bookmark - Tests_Passed" sap:VirtualizedContainerService.HintSize="691,175" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSetBookmarkContent>
            <p:WordSetBookmarkContent BookmarkName="Tests_Failed" BookmarkText="[TestsFailed]" DisplayName="Set Bookmark - Tests_Failed" sap:VirtualizedContainerService.HintSize="691,175" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSetBookmarkContent>
            <p:WordSetBookmarkContent BookmarkName="Tests_NotExecuted" BookmarkText="[TestsNotExecuted]" DisplayName="Set Bookmark - Tests_NotExecuted" sap:VirtualizedContainerService.HintSize="691,175" sap2010:WorkflowViewState.IdRef="WordSetBookmarkContent_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordSetBookmarkContent>
            <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[count&lt;TestCaseLogJSON(&quot;data&quot;).Count]" DisplayName="Iterate through list of Test Cases" sap:VirtualizedContainerService.HintSize="691,11497" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
              <ui:InterruptibleDoWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="689,11366" sap2010:WorkflowViewState.IdRef="Sequence_55">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="655,115" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TestCaseLogID]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[TestCaseLogJSON("data")(count)("id").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence sap2010:Annotation.AnnotationText="API EndPoint - {BaseURL}/v2/{projectId}/testcaselogs/{id}&#xA;Input Parameters - Project ID (ProjectID), Test Case Log ID (TestCaseLogID)&#xA;    &gt; Include Assertions (True)&#xA;Output Parameters - List of Test Assertions (List_TestAssertion)" DisplayName="Get Assertion Info" sap:VirtualizedContainerService.HintSize="655,336" sap2010:WorkflowViewState.IdRef="Sequence_116">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HTTPRequest_GetAssertionInfo - Invoke Workflow File (Helper Workflows\WIP Improvements\HTTPRequest_GetAssertionInfo.xaml)" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Helper Workflows\HTTP Request Workflows\HTTPRequest_GetAssertionInfo.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_TM_projectID">[ProjectID]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_TM_baseURL">[TM_baseURL]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_TM_authtoken">[BearerToken]</InArgument>
                        <OutArgument x:TypeArguments="njl:JObject" x:Key="out_JSONout">[AssertionJSON]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_TM_TestCaseLogID">[TestCaseLogID]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <If Condition="[count&lt;&gt;0]" DisplayName="Check for multiple Test Cases" sap:VirtualizedContainerService.HintSize="655,457" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,228" sap2010:WorkflowViewState.IdRef="Sequence_62">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Word_Add_Building_Block - Invoke Workflow File (Helper Workflows\Word_Add_Building_Block.xaml)" sap:VirtualizedContainerService.HintSize="382,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Helper Workflows\Word_Add_Building_Block.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="quickPart">Test Case Building Block</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,90" sap2010:WorkflowViewState.IdRef="Sequence_61">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="655,366" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseName]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[TestCaseLogJSON("data")(count)("testCase")("name").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseAutomationName]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[AssertionJSON("automationTestCaseName").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseStatus]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[AssertionJSON("result").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseStartDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[CDate(AssertionJSON("executionStart")).ToString("MM/dd/yyyy HH:mm:ss")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseEndDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[CDate(AssertionJSON("executionEnd")).ToString("MM/dd/yyyy HH:mm:ss")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseRobotUser]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[AssertionJSON("robotName").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TestCaseRobotMachine]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[AssertionJSON("hostMachineName").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Int32">[count+1]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="655,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[TestCaseName]" ReplaceAll="False" Search="Test Case Name" />
                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="655,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[TestCaseAutomationName]" ReplaceAll="False" Search="Test Case Automation" />
                  <Switch x:TypeArguments="x:String" DisplayName="Update Test Case Status" Expression="[TestCaseStatus]" sap:VirtualizedContainerService.HintSize="655,2534" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                    <Switch.Default>
                      <Sequence DisplayName="Default" sap:VirtualizedContainerService.HintSize="416,90" sap2010:WorkflowViewState.IdRef="Sequence_97">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </Switch.Default>
                    <Sequence x:Key="Passed" DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,717" sap2010:WorkflowViewState.IdRef="Sequence_98">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="Passed" ReplaceAll="False" Search="&lt;tc passed status&gt;" />
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_14" ReplaceAll="False" Search="&lt;tc failed status&gt;">
                        <p:WordReplaceText.Replace>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </p:WordReplaceText.Replace>
                      </p:WordReplaceText>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,213" sap2010:WorkflowViewState.IdRef="WordReplaceText_15" ReplaceAll="False" Search="&lt;tc not executed&gt;">
                        <p:WordReplaceText.Replace>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </p:WordReplaceText.Replace>
                      </p:WordReplaceText>
                    </Sequence>
                    <Sequence x:Key="Failed" DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,717" sap2010:WorkflowViewState.IdRef="Sequence_99">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_16" ReplaceAll="False" Search="&lt;tc passed status&gt;">
                        <p:WordReplaceText.Replace>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </p:WordReplaceText.Replace>
                      </p:WordReplaceText>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_17" Replace="Failed" ReplaceAll="False" Search="&lt;tc failed status&gt;" />
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,213" sap2010:WorkflowViewState.IdRef="WordReplaceText_18" ReplaceAll="False" Search="&lt;tc not executed&gt;">
                        <p:WordReplaceText.Replace>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </p:WordReplaceText.Replace>
                      </p:WordReplaceText>
                    </Sequence>
                    <Sequence x:Key="None" DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,717" sap2010:WorkflowViewState.IdRef="Sequence_100">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_19" ReplaceAll="False" Search="&lt;tc passed status&gt;">
                        <p:WordReplaceText.Replace>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </p:WordReplaceText.Replace>
                      </p:WordReplaceText>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_20" ReplaceAll="False" Search="&lt;tc failed status&gt;">
                        <p:WordReplaceText.Replace>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </p:WordReplaceText.Replace>
                      </p:WordReplaceText>
                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,213" sap2010:WorkflowViewState.IdRef="WordReplaceText_21" Replace="Not Executed" ReplaceAll="False" Search="&lt;tc not executed&gt;" />
                    </Sequence>
                  </Switch>
                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="655,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_4" Replace="[TestCaseStartDate]" ReplaceAll="False" Search="&lt;Start Date&gt;" />
                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="655,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_5" Replace="[TestCaseEndDate]" ReplaceAll="False" Search="&lt;End Date&gt;" />
                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="655,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_6" Replace="[TestCaseRobotUser]" ReplaceAll="False" Search="&lt;Robot User&gt;" />
                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="655,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_7" Replace="[TestCaseRobotMachine]" ReplaceAll="False" Search="&lt;Robot Machine&gt;" />
                  <If Condition="[AssertionJSON Is Nothing OrElse AssertionJSON(&quot;assertions&quot;) Is Nothing]" sap:VirtualizedContainerService.HintSize="655,6166" sap2010:WorkflowViewState.IdRef="If_11">
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="653,228" sap2010:WorkflowViewState.IdRef="Sequence_90">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Word_Add_Building_Block - Invoke Workflow File (Helper Workflows\Word_Add_Building_Block.xaml)" sap:VirtualizedContainerService.HintSize="619,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Helper Workflows\Word_Add_Building_Block.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="quickPart">No Assertions Captured</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="653,5808" sap2010:WorkflowViewState.IdRef="Sequence_91">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Populate Assertions Table" sap:VirtualizedContainerService.HintSize="619,5748" sap2010:WorkflowViewState.IdRef="Sequence_92">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Word_Add_Building_Block - Invoke Workflow File (Helper Workflows\Word_Add_Building_Block.xaml)" sap:VirtualizedContainerService.HintSize="585,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Helper Workflows\Word_Add_Building_Block.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="quickPart">Title Row</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign DisplayName="Set Assertion Count" sap:VirtualizedContainerService.HintSize="585,115" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[assertionCount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[assertionCount &lt; AssertionJSON(&quot;assertions&quot;).Count]" DisplayName="Iterate through list of Assertions" sap:VirtualizedContainerService.HintSize="585,5373" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                            <ui:InterruptibleDoWhile.Body>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="583,5251" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="timestamp" />
                                  <Variable x:TypeArguments="x:String" Name="description" />
                                  <Variable x:TypeArguments="x:String" Name="expected" />
                                  <Variable x:TypeArguments="x:String" Name="actual" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[assertionCount &lt;&gt;0]" sap:VirtualizedContainerService.HintSize="549,457" sap2010:WorkflowViewState.IdRef="If_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,228" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Word_Add_Building_Block - Invoke Workflow File (Helper Workflows\Word_Add_Building_Block.xaml)" sap:VirtualizedContainerService.HintSize="382,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Helper Workflows\Word_Add_Building_Block.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="quickPart">Empty Row</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,90" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:MultipleAssign DisplayName="Assign Timestamp" sap:VirtualizedContainerService.HintSize="549,149" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[timestamp]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CDate(AssertionJSON("assertions")(assertionCount)("timestamp")).ToString("MM/dd/yy HH:mm:ss")]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                                <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="549,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_8" Replace="[(assertionCount+1).ToString]" ReplaceAll="False" Search="&lt;step #&gt;" />
                                <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="549,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_9" Replace="[timestamp]" ReplaceAll="False" Search="&lt;timestamp&gt;" />
                                <Sequence sap2010:Annotation.AnnotationText="CONFIGURATION - This was a custom requirement where the Log Message of a verification should be parsed into three columns. For this to work, the log message must have a specific format of &quot;&lt;description&gt;| Expected: &lt;expected&gt; | Actual: &lt;actual&gt;&quot;" DisplayName="Parsing Payload into Description | Expected | Actual" sap:VirtualizedContainerService.HintSize="549,1620" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="515,811" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <ui:MultipleAssign DisplayName="Parse Description" sap:VirtualizedContainerService.HintSize="513,179" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[description]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[split(AssertionJSON("assertions")(assertionCount)("payload").ToString," | ")(0)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[expected]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[split(split(AssertionJSON("assertions")(assertionCount)("payload").ToString," | ")(1),":")(1).Trim]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[actual]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[split(split(AssertionJSON("assertions")(assertionCount)("payload").ToString," | ")(2),":")(1).Trim]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="513,346" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Set default description" sap:VirtualizedContainerService.HintSize="479,115" sap2010:WorkflowViewState.IdRef="Assign_21">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[description]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[If(AssertionJSON("assertions")(assertionCount)("payload").ToString().Length &gt; 255, AssertionJSON("assertions")(assertionCount)("payload").ToString().Substring(0, 252) + "...", AssertionJSON("assertions")(assertionCount)("payload").ToString())]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:MultipleAssign DisplayName="Set default actual/expected" sap:VirtualizedContainerService.HintSize="479,171" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:String">[expected]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:String">[actual]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="513,90" sap2010:WorkflowViewState.IdRef="Sequence_111">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="515,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_10" Replace="[description]" ReplaceAll="False" Search="&lt;description&gt;" />
                                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="515,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="[expected]" ReplaceAll="False" Search="&lt;expected&gt;" />
                                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="515,213" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="[actual]" ReplaceAll="False" Search="&lt;actual&gt;" />
                                </Sequence>
                                <If Condition="[CBool(AssertionJSON(&quot;assertions&quot;)(assertionCount)(&quot;succeeded&quot;))]" DisplayName="Check for Passed Test Step" sap:VirtualizedContainerService.HintSize="549,1129" sap2010:WorkflowViewState.IdRef="If_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,495" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="PASS" ReplaceAll="False" Search="&lt;test step pass status&gt;" />
                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,213" sap2010:WorkflowViewState.IdRef="WordReplaceText_22" ReplaceAll="False" Search="&lt;test step fail status&gt;">
                                        <p:WordReplaceText.Replace>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </p:WordReplaceText.Replace>
                                      </p:WordReplaceText>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,495" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,222" sap2010:WorkflowViewState.IdRef="WordReplaceText_23" ReplaceAll="False" Search="&lt;test step pass status&gt;">
                                        <p:WordReplaceText.Replace>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </p:WordReplaceText.Replace>
                                      </p:WordReplaceText>
                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="382,213" sap2010:WorkflowViewState.IdRef="WordReplaceText_25" Replace="FAIL" ReplaceAll="False" Search="&lt;test step fail status&gt;" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <If Condition="[CBool(AssertionJSON(&quot;assertions&quot;)(assertionCount)(&quot;hasScreenshot&quot;))]" DisplayName="Check for Screenshot" sap:VirtualizedContainerService.HintSize="549,1286" sap2010:WorkflowViewState.IdRef="If_5">
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="513,1057" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="screenshotURL" />
                                        <Variable x:TypeArguments="x:String" Name="screenshotFileName" />
                                        <Variable x:TypeArguments="si:FileInfo" Name="DownloadedFile" />
                                        <Variable x:TypeArguments="x:String" Name="assertionID" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,211" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[screenshotURL]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[AssertionJSON("assertions")(assertionCount)("screenshot")("url").ToString]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[screenshotFileName]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"tempscreenshot.jpg"]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[assertionID]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[AssertionJSON("assertions")(assertionCount)("id").ToString]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SaveAssertionScreenshot - Invoke Workflow File (Helper Workflows\SaveAssertionScreenshot.xaml)" sap:VirtualizedContainerService.HintSize="479,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Helper Workflows\SaveAssertionScreenshot.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BearerToken">[BearerToken]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ScreenshotURL">[screenshotURL]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ScreenshotFileName">[screenshotFileName]</InArgument>
                                          <OutArgument x:TypeArguments="si:FileInfo" x:Key="out_DownloadedFile">[DownloadedFile]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Word_Add_Building_Block - Invoke Workflow File (Helper Workflows\Word_Add_Building_Block.xaml)" sap:VirtualizedContainerService.HintSize="479,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Helper Workflows\Word_Add_Building_Block.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="quickPart">Screenshot Row</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <p:WordAddImage Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" DisplayName="Add Picture" sap:VirtualizedContainerService.HintSize="479,328" sap2010:WorkflowViewState.IdRef="WordAddImage_1" ImagePath="[DownloadedFile.FullName]" InsertRelativeTo="Text" Position="Replace" Text="&lt;Screenshot Row&gt;" />
                                      <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="479,104" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[DownloadedFile.FullName]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="513,90" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign DisplayName="Assign Assertion Status" sap:VirtualizedContainerService.HintSize="549,106" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[assertionCount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[assertionCount+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:InterruptibleDoWhile.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InterruptibleDoWhile>
                        </Sequence>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:InterruptibleDoWhile.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleDoWhile>
            <Sequence DisplayName="Repeat Header Rows" sap:VirtualizedContainerService.HintSize="691,2605" sap2010:WorkflowViewState.IdRef="Sequence_105">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="No_Tables_str" />
                <Variable x:TypeArguments="x:Int32" Name="TmpCounter" />
                <Variable x:TypeArguments="x:Int32" Name="No_Tables" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="515,212" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_2" InScope="[WordDocumentScope]" ScopeIdentifier="WordDocumentScope" Shortcuts="[d(hk)][d(ctrl)]f[u(ctrl)][u(hk)]" Version="V4" />
              <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="None" ClipboardMode="Never" DisplayName="Type Into" EmptyFieldMode="SingleLine" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="515,259" sap2010:WorkflowViewState.IdRef="NTypeInto_2" InScope="[WordDocumentScope]" ScopeIdentifier="WordDocumentScope" Text="Header Step[k(Enter)]" Version="V4" />
              <uix:NGetText DisplayName="Get Text 'Result 1 of 2'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="515,190" sap2010:WorkflowViewState.IdRef="NGetText_2" InScope="[WordDocumentScope]" ScopeIdentifier="WordDocumentScope" TextString="[No_Tables_str]" Version="V4">
                <uix:NGetText.Target>
                  <uix:TargetAnchorable CVScreenId="696e1f81-2ea2-44b4-819a-4e5c1bf88124" CvType="AnyWordGroup" DesignTimeRectangle="42, 650, 165, 41" ElementType="Text" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' /&gt;&lt;uia cls='NetUILabel' role='Text' automationid='' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' /&gt;" Guid="b543691d-41b8-4c66-9b85-260d4e99e9c0" InformativeScreenshot="2fa0df8b6179624727b8e75dcbc9c6b7.png" ScopeSelectorArgument="&lt;wnd app='winword.exe' cls='OpusApp' title='Temp Output (Word) - Word' /&gt;" SearchSteps="FuzzySelector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                </uix:NGetText.Target>
              </uix:NGetText>
              <If Condition="[No_Tables_str = &quot;1 result&quot;]" DisplayName="Check if 1 or multiple results" sap:VirtualizedContainerService.HintSize="515,601" sap2010:WorkflowViewState.IdRef="If_14">
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="513,231" sap2010:WorkflowViewState.IdRef="Sequence_117">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Initialize Tmp Counter" sap:VirtualizedContainerService.HintSize="479,171" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[TmpCounter]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[No_Tables]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="513,231" sap2010:WorkflowViewState.IdRef="Sequence_118">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Initialize Tmp Counter" sap:VirtualizedContainerService.HintSize="479,171" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[TmpCounter]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[No_Tables]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[CInt(Split(No_Tables_str, "of")(1).Trim())]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                  </Sequence>
                </If.Else>
              </If>
              <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[TmpCounter &lt; No_Tables]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="515,1251" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_4">
                <ui:InterruptibleDoWhile.Body>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,1129" sap2010:WorkflowViewState.IdRef="Sequence_108">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[TmpCounter&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="434,492" sap2010:WorkflowViewState.IdRef="If_13">
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,263" sap2010:WorkflowViewState.IdRef="Sequence_106">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="382,203" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_3" InScope="[WordDocumentScope]" ScopeIdentifier="WordDocumentScope" Shortcuts="[d(hk)][d(ctrl)]f[u(ctrl)][u(hk)][d(hk)][k(enter)][u(hk)]" Version="V4" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,90" sap2010:WorkflowViewState.IdRef="Sequence_107">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DelayBetweenKeys="0.1" DisplayName="Keyboard Shortcuts" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="434,212" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_4" InScope="[WordDocumentScope]" ScopeIdentifier="WordDocumentScope" Shortcuts="[d(hk)][d(alt)][u(alt)][u(hk)][d(hk)]j[u(hk)][d(hk)]l[u(hk)][d(hk)]j[u(hk)]" Version="V4" />
                    <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="None" ClipboardMode="Never" DisplayName="Type Into" EmptyFieldMode="SingleLine" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="434,259" sap2010:WorkflowViewState.IdRef="NTypeInto_3" InScope="[WordDocumentScope]" ScopeIdentifier="WordDocumentScope" Text="Step" Version="V4" />
                    <Assign DisplayName="+1 to Counter" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[TmpCounter]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[TmpCounter+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ui:InterruptibleDoWhile.Body>
              </ui:InterruptibleDoWhile>
            </Sequence>
            <p:WordSaveAs DisplayName="Save Document As" FilePath="[&quot;Test Report for &quot;+TestExecutionName]" sap:VirtualizedContainerService.HintSize="691,221" sap2010:WorkflowViewState.IdRef="WordSaveAs_3" />
            <p:WordExportToPdf DisplayName="Save Document as PDF" FilePath="[&quot;Test Report for &quot;+TestExecutionName+&quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="691,161" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
          </Sequence>
        </ActivityAction>
      </p:WordApplicationScope.Body>
    </p:WordApplicationScope>
  </Sequence>
</Activity>